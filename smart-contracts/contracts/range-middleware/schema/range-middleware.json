{
  "contract_name": "range-middleware",
  "contract_version": "0.1.0",
  "idl_version": "1.0.0",
  "instantiate": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "InstantiateMsg",
    "type": "object",
    "required": [
      "range_executor_admin",
      "range_submitter_admin"
    ],
    "properties": {
      "range_executor_admin": {
        "type": "string"
      },
      "range_submitter_admin": {
        "type": "string"
      }
    },
    "additionalProperties": false
  },
  "execute": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "ExecuteMsg",
    "oneOf": [
      {
        "description": "range operations",
        "type": "object",
        "required": [
          "range_msg"
        ],
        "properties": {
          "range_msg": {
            "$ref": "#/definitions/RangeExecuteMsg"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "admin operations",
        "type": "object",
        "required": [
          "admin_msg"
        ],
        "properties": {
          "admin_msg": {
            "$ref": "#/definitions/AdminExecuteMsg"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "AdminExecuteMsg": {
        "oneOf": [
          {
            "description": "Update the range submitter admin.",
            "type": "object",
            "required": [
              "update_range_submitter_admin"
            ],
            "properties": {
              "update_range_submitter_admin": {
                "type": "object",
                "required": [
                  "new_admin"
                ],
                "properties": {
                  "new_admin": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Update the range executor admin.",
            "type": "object",
            "required": [
              "update_range_executor_admin"
            ],
            "properties": {
              "update_range_executor_admin": {
                "type": "object",
                "required": [
                  "new_admin"
                ],
                "properties": {
                  "new_admin": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "AssetInfoBase_for_String": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "cw20"
            ],
            "properties": {
              "cw20": {
                "type": "string"
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "native"
            ],
            "properties": {
              "native": {
                "type": "string"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "Decimal": {
        "description": "A fixed-point decimal value with 18 fractional digits, i.e. Decimal(1_000_000_000_000_000_000) == 1.0\n\nThe greatest possible value that can be represented is 340282366920938463463.374607431768211455 (which is (2^128 - 1) / 10^18)",
        "type": "string"
      },
      "NewRange": {
        "type": "object",
        "required": [
          "cl_vault_address",
          "lower_price",
          "upper_price"
        ],
        "properties": {
          "cl_vault_address": {
            "type": "string"
          },
          "lower_price": {
            "$ref": "#/definitions/Decimal"
          },
          "upper_price": {
            "$ref": "#/definitions/Decimal"
          }
        },
        "additionalProperties": false
      },
      "OsmosisPool": {
        "description": "Struct for interacting with Osmosis v1beta1 balancer pools. If `pool_id` maps to another type of pool this will fail.",
        "type": "object",
        "required": [
          "pool_id"
        ],
        "properties": {
          "pool_id": {
            "description": "The pool id of the pool to interact with",
            "type": "integer",
            "format": "uint64",
            "minimum": 0.0
          }
        },
        "additionalProperties": false
      },
      "Pool": {
        "description": "An enum with all known variants that implement the Pool trait. The ideal solution would of course instead be to use a trait object so that the caller can pass in any type that implements the Pool trait, but trait objects require us not to implement the Sized trait, which cw_serde requires.",
        "oneOf": [
          {
            "description": "Contains an Osmosis pool implementation",
            "type": "object",
            "required": [
              "osmosis"
            ],
            "properties": {
              "osmosis": {
                "$ref": "#/definitions/OsmosisPool"
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RangeExecuteMsg": {
        "oneOf": [
          {
            "description": "Submit a range to the range middleware",
            "type": "object",
            "required": [
              "submit_new_range"
            ],
            "properties": {
              "submit_new_range": {
                "type": "object",
                "required": [
                  "new_range"
                ],
                "properties": {
                  "new_range": {
                    "$ref": "#/definitions/NewRange"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "description": "Execute a new range",
            "type": "object",
            "required": [
              "execute_new_range"
            ],
            "properties": {
              "execute_new_range": {
                "type": "object",
                "required": [
                  "cl_vault_address",
                  "force_swap_route",
                  "max_slippage",
                  "ratio_of_swappable_funds_to_use",
                  "recommended_swap_route",
                  "twap_window_seconds"
                ],
                "properties": {
                  "cl_vault_address": {
                    "type": "string"
                  },
                  "force_swap_route": {
                    "type": "boolean"
                  },
                  "max_slippage": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "ratio_of_swappable_funds_to_use": {
                    "$ref": "#/definitions/Decimal"
                  },
                  "recommended_swap_route": {
                    "$ref": "#/definitions/SwapOperationsListBase_for_String"
                  },
                  "twap_window_seconds": {
                    "type": "integer",
                    "format": "uint64",
                    "minimum": 0.0
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "SwapOperationBase_for_String": {
        "type": "object",
        "required": [
          "ask_asset_info",
          "offer_asset_info",
          "pool"
        ],
        "properties": {
          "ask_asset_info": {
            "$ref": "#/definitions/AssetInfoBase_for_String"
          },
          "offer_asset_info": {
            "$ref": "#/definitions/AssetInfoBase_for_String"
          },
          "pool": {
            "$ref": "#/definitions/Pool"
          }
        },
        "additionalProperties": false
      },
      "SwapOperationsListBase_for_String": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/SwapOperationBase_for_String"
        }
      }
    }
  },
  "query": {
    "$schema": "http://json-schema.org/draft-07/schema#",
    "title": "QueryMsg",
    "oneOf": [
      {
        "description": "range queries",
        "type": "object",
        "required": [
          "range_query"
        ],
        "properties": {
          "range_query": {
            "$ref": "#/definitions/RangeQueryMsg"
          }
        },
        "additionalProperties": false
      },
      {
        "description": "admin queries",
        "type": "object",
        "required": [
          "admin_query"
        ],
        "properties": {
          "admin_query": {
            "$ref": "#/definitions/AdminQueryMsg"
          }
        },
        "additionalProperties": false
      }
    ],
    "definitions": {
      "AdminQueryMsg": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "get_range_submitter_admin"
            ],
            "properties": {
              "get_range_submitter_admin": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "get_execution_admin"
            ],
            "properties": {
              "get_execution_admin": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      },
      "RangeQueryMsg": {
        "oneOf": [
          {
            "type": "object",
            "required": [
              "get_queued_range_updates"
            ],
            "properties": {
              "get_queued_range_updates": {
                "type": "object",
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          },
          {
            "type": "object",
            "required": [
              "get_queued_range_updates_for_contract"
            ],
            "properties": {
              "get_queued_range_updates_for_contract": {
                "type": "object",
                "required": [
                  "contract_address"
                ],
                "properties": {
                  "contract_address": {
                    "type": "string"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        ]
      }
    }
  },
  "migrate": null,
  "sudo": null,
  "responses": {
    "admin_query": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Empty",
      "description": "An empty struct that serves as a placeholder in different places, such as contracts that don't set a custom message.\n\nIt is designed to be expressable in correct JSON and JSON Schema but contains no meaningful data. Previously we used enums without cases, but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)",
      "type": "object"
    },
    "range_query": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Empty",
      "description": "An empty struct that serves as a placeholder in different places, such as contracts that don't set a custom message.\n\nIt is designed to be expressable in correct JSON and JSON Schema but contains no meaningful data. Previously we used enums without cases, but those cannot represented as valid JSON Schema (https://github.com/CosmWasm/cosmwasm/issues/451)",
      "type": "object"
    }
  }
}
